<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Brandico Mi Perfil</title>
    <!-- Importar Bulma CSS-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.9.3/css/bulma.min.css">
    <!-- Importar los iconos -->
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <!-- Importar Alpine.js -->
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <link rel="icon" href="{{ asset('img/logoHeader.png') }}">
    <link rel="stylesheet" href="{{ asset('css/miperfil.css') }}">
</head>
<body>
<!-- Header -->
<header class="hero is-primary is-small">
    <div class="hero-body">
        <div class="container">
            <div class="is-flex is-align-items-center is-justify-content-flex-start logo-field">
                <figure class="image is-64x64">
                    <img src="{{ asset('img/BrandicoLogo2White.png') }}" alt="icono BRANDICO">
                </figure>
                <div style="white-space: nowrap; align-self: center">
                    <h1 class="title">BRANDICO</h1>
                </div>
            </div>
        </div>
    </div>
</header>
<section class="columns is-gapless">
    <div class="column espacioblanco is-2"></div>
    <div class="column">
        <section class="section">
            <div class="container">
                <div class="card">
                    <div class="card-content">
                        <div class="content contenido">
                            <form x-data="userEditData()" @submit.prevent="saveChanges">
                                <a href="{{ path('miperfil') }}"><ion-icon name="arrow-back-outline"></ion-icon> Volver</a>
                                <div class="field">
                                    <label class="label" for="phone">
                                        <h1>Teléfono</h1>
                                    </label>
                                    <div class="control has-icons-right">
                                        <input class="input is-2"  id="phone" type="text" name="_phone" x-model="formData.phone" @input="validatePhone" @blur="checkPhoneAvailability" :class="phoneValid && phoneAvailable ? 'is-success' : ''">
                                        <span x-show="formData.phone && phoneValid && phoneAvailable" class="icon is-right has-text-success"><ion-icon name="checkmark"></ion-icon></span>
                                        <p x-show="formData.phone && !phoneValid" class="has-text-danger">El teléfono debe tener 9 dígitos</p>
                                        <p x-show="formData.phone && !phoneAvailable" class="has-text-danger">El teléfono ya está en uso</p>
                                        <span x-show="formData.phone && (!phoneValid || !phoneAvailable)" class="icon is-right has-text-danger"><ion-icon name="close"></ion-icon></span>
                                    </div>
                                </div>
                                <div class="field">
                                    <div class="control buttons publish">
                                        <button class="button is-link" :disabled="!phoneValid">Guardar</button>
                                    </div>
                                </div>
                                <div x-text="formMessage"></div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
    <div class="column espacioblanco is-2"></div>
</section>
<script>
    const FORM_URL = "{{ path('actualizartelefono') }}"
    const PHONE_AVAILABILITY_URL = "{{ path('phoneavailable') }}"

    document.addEventListener('DOMContentLoaded', function () {
        var logoDiv = document.querySelector('.logo-field');

        logoDiv.addEventListener('click', function() {
            window.location.href = "{{ path('controlador_portal_inicio') }}";
        });
    });

    function userEditData() {
        return {
            formData: {
                phone: "{{ user.telefono }}",
            },
            phoneValid: true,
            formMessage: "",
            phoneAvailable: true,

            //Validar Teléfono
            validatePhone() {
                const phoneRegex = /^\d{9}$/
                if (!phoneRegex.test(this.formData.phone))
                    this.phoneValid = false
                else
                    this.phoneValid = true
            },

            //Verificar que el teléfono no está usado con AJAX
            checkPhoneAvailability() {
                if (!this.phoneValid || this.formData.phone === "") {
                    return false
                }

                // Verificar si el teléfono ha cambiado desde la última verificación
                if (this.formData.email === this.lastCheckedPhone) {
                    return false
                }

                //Realizar la solicitud AJAX para verificar la disponibilidad del teléfono
                fetch(PHONE_AVAILABILITY_URL, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        Accept: "application/json",
                    },
                    body: JSON.stringify({
                        phone: this.formData.phone
                    }),
                })
                    .then((response) => response.json())
                    .then((data) => {
                        this.phoneAvailable = data.available
                        this.lastCheckedPhone = this.formData.phone
                    })
                    .catch((error) => {
                        console.error("Error al verificar la disponibilidad del teléfono", error)
                    })
            },

            saveChanges() {
                this.checkPhoneAvailability()

                if (!this.formData.phone.length) {
                    return
                }

                if (!this.phoneValid) {
                    return
                }

                fetch(FORM_URL, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        Accept: "application/json",
                    },
                    body: JSON.stringify({
                        phone: this.formData.phone,
                    }),
                })
                    .then((response) => {
                        if (response.status === 201) {
                            window.location.href = "{{ path('miperfil') }}"
                        }
                    })
                    .catch((error) => {
                        this.formMessage = "Algo ha ido mal"
                    })
            }
        }
    }
</script>
</body>
